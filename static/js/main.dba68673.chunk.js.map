{"version":3,"sources":["components/NumberInputAndOutput.js","components/About.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["NumberInputAndOutput","useState","number","setNumber","Fragment","Form","Group","Label","Control","type","value","onChange","event","target","autoFocus","Accordion","defaultActiveKey","Card","Toggle","as","Header","eventKey","Collapse","Body","isNaN","aNumber","numWords","err","console","error","renderOutput","About","show","setShow","handleClose","Button","variant","onClick","Modal","onHide","Title","className","href","src","border","Footer","Navigation","Navbar","bg","expand","Brand","aria-controls","id","Nav","style","display","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAyDeA,EArDc,WAC5B,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KA2BA,OACC,eAAC,IAAMC,SAAP,WAEC,eAACC,EAAA,EAAKC,MAAN,WACC,cAACD,EAAA,EAAKE,MAAN,6BACA,cAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,MAAOR,EAAQS,SA9BjB,SAACC,GAC3BT,EAAUS,EAAMC,OAAOH,QA6BkDI,WAAS,OAGjF,uBAGA,cAACC,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,SACC,eAACC,EAAA,EAAD,WACC,cAACF,EAAA,EAAUG,OAAX,CAAkBC,GAAIF,IAAKG,OAAQC,SAAS,IAA5C,4BAGA,cAACN,EAAA,EAAUO,SAAX,CAAoBD,SAAS,IAA7B,SACC,cAACJ,EAAA,EAAKM,KAAN,UAlCgB,WACpB,GAAe,KAAXrB,EACH,OAAO,wDAEP,IACC,GAAIsB,MAAMtB,GACT,KAAM,eAEN,OAZeuB,EAYEvB,EAXbwB,IAASD,GAab,MAAOE,GAER,OADAC,QAAQC,MAAMF,GACP,sDAhBQ,IAACF,EAsCFK,gB,8CCJHC,MAzCf,WACC,MAAwB9B,oBAAS,GAAjC,mBAAO+B,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAGlC,OACC,eAAC,IAAM7B,SAAP,WACC,cAAC+B,EAAA,EAAD,CAAQC,QAAQ,aAAaC,QAJZ,kBAAMJ,GAAQ,IAI/B,sBAIA,eAACK,EAAA,EAAD,CAAON,KAAMA,EAAMO,OAAQL,EAA3B,UACC,cAACI,EAAA,EAAMlB,OAAP,UACC,cAACkB,EAAA,EAAME,MAAP,yBAED,cAACF,EAAA,EAAMf,KAAP,UACC,sBAAKkB,UAAU,qBAAf,UACC,sBAAKA,UAAU,gCAAf,uCAC2B,sBAAMA,UAAU,oEAAhB,oBAD3B,MAC2H,IAC1H,mBAAGA,UAAU,OAAOC,KAAK,8CAAzB,sCAID,uBACA,qBAAKD,UAAU,gCAAf,SAEC,qBAAKE,IAAI,mEAAmEC,OAAO,IAAIH,UAAU,sBAKpG,cAACH,EAAA,EAAMO,OAAP,UACC,cAACV,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASH,EAAhC,4BCdUY,MAlBf,WACC,OACC,gCACC,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACC,cAACF,EAAA,EAAOG,MAAR,uCACA,cAACH,EAAA,EAAO7B,OAAR,CAAeiC,gBAAc,eAC7B,cAACJ,EAAA,EAAOzB,SAAR,CAAiB8B,GAAG,aAApB,SACC,cAACC,EAAA,EAAD,CAAKZ,UAAU,UAAf,SACC,cAAC,EAAD,WAKH,qBAAKE,IAAI,iEAAiEW,MAAO,CAAEC,QAAS,cCHhFC,MATf,WACC,OACC,eAACC,EAAA,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,QCEYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dba68673.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Accordion, Card } from \"react-bootstrap\";\r\nimport numWords from \"num-words\";\r\n\r\nconst NumberInputAndOutput = () => {\r\n\tconst [number, setNumber] = useState(\"\");\r\n\r\n\tconst handleInputChanged = (event) => {\r\n\t\tsetNumber(event.target.value);\r\n\t};\r\n\r\n\tconst numToText = (aNumber) => {\r\n\t\treturn numWords(aNumber);\r\n\t};\r\n\r\n\tconst renderOutput = () => {\r\n\t\tif (number === \"\") {\r\n\t\t\treturn <div>Please enter a number</div>;\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tif (isNaN(number)) {\r\n\t\t\t\t\tthrow \"Not a Number\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn numToText(number);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t\treturn <div>Cannot convert that</div>;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{/*Input*/}\r\n\t\t\t<Form.Group>\r\n\t\t\t\t<Form.Label>Enter a number</Form.Label>\r\n\t\t\t\t<Form.Control type=\"text\" value={number} onChange={handleInputChanged} autoFocus />\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<br />\r\n\r\n\t\t\t{/*Output*/}\r\n\t\t\t<Accordion defaultActiveKey=\"0\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n\t\t\t\t\t\tConverted Text\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t<Card.Body>{renderOutput()}</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\t\t\t</Accordion>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default NumberInputAndOutput;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"../css/heart.css\";\r\n\r\nfunction About() {\r\n\tconst [show, setShow] = useState(false);\r\n\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Button variant=\"navbar-btn\" onClick={handleShow}>\r\n\t\t\t\tAbout Me\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>About Me</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<div className=\"d-flex flex-column\">\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t\tDesigned & Developed with <span className=\"heart animate__animated animate__heartBeat animate__infinite px-1\">â™¥</span> by{\" \"}\r\n\t\t\t\t\t\t\t<a className=\"px-1\" href=\"https://github.com/anushibin007/num-to-text\">\r\n\t\t\t\t\t\t\t\tAnu Shibin Joseph Raj\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t\t{/* This line shows the actual counter */}\r\n\t\t\t\t\t\t\t<img src=\"https://www.freevisitorcounters.com/en/counter/render/836896/t/0\" border=\"0\" className=\"counterimg\"></img>\r\n\t\t\t\t\t\t\t{/* Check full stat here: https://www.freevisitorcounters.com/en/home/stats/id/836896 */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"info\" onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\nexport default About;\r\n","import \"../css/navbar.css\";\r\nimport React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport About from \"./About\";\r\n\r\nfunction Navigation() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar bg=\"light\" expand=\"lg\">\r\n\t\t\t\t<Navbar.Brand>Number to Text converter</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"ntc-navbar\" />\r\n\t\t\t\t<Navbar.Collapse id=\"ntc-navbar\">\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t<About />\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t{/* This line is to make an AJAX call to the counter update function. This will just increment the counter in the background */}\r\n\t\t\t<img src=\"https://www.freevisitorcounters.com/en/home/counter/836896/t/0\" style={{ display: \"none\" }}></img>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"animate.css\";\nimport { Container } from \"react-bootstrap\";\nimport NumberInputAndOutput from \"./components/NumberInputAndOutput.js\";\nimport Navigation from \"./components/Navigation.js\";\nfunction App() {\n\treturn (\n\t\t<Container>\n\t\t\t<Navigation />\n\t\t\t<NumberInputAndOutput />\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}